
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: kube-prometheus-stack-as
  namespace: tools-argo
spec:
  generators:
  - clusters: {}
  template:
    metadata:
      name: kube-prometheus-stack
    spec:
      project: tools
      source:
        chart: kube-prometheus-stack
        repoURL: https://prometheus-community.github.io/helm-charts
        targetRevision: 37.0.0
        helm:
          releaseName: abhra
          skipCrds: true
          values: |
            grafana:
              envFromSecret: google-secret-for-grafana
              plugins:
              - redis-datasource
              # extraConfigmapMounts:
              # - name: oauth-configmap
                # mountPath: /etc/grafana/ssl/
                # subPath: certificates.crt # (optional)
                # configMap: certs-configmap
                # readOnly: true
              grafana.ini:
                server:
                  root_url: https://grafana.{{metadata.labels.abhra.shambhala/url-base-path}}
                auth.google:
                  enabled: true
                  client_id: TO_BE_REPLACED
                  client_secret: TO_BE_REPLACED
                  scopes: https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
                  auth_url: https://accounts.google.com/o/oauth2/auth
                  token_url: https://accounts.google.com/o/oauth2/token
                  allowed_domains: wescale.fr
                  allow_sign_up: true
              additionalDataSources:
                - name: Prometheus
                  access: proxy
                  editable: true
                  type: prometheus
                  url: http://{{ printf "%s-kube-prometheus-stac-prometheus.tools-monitoring" .Release.Name }}:9090
                - name: Redis
                  type: redis-datasource
                  access: proxy
                  editable: true
                  url: redis://guru-redis-master.guru.svc:6379
                - name: Loki
                  type: loki  
                  access: proxy
                  editable: true
                  url: http://{{ printf "%s-loki" .Release.Name }}:3100
              ingress:
                  enabled: true
                  ingressClassName: nginx
                  annotations:
                    cert-manager.io/cluster-issuer: 'letsencrypt-{{metadata.labels.abhra.shambhala/environment-type}}'
                    kubernetes.io/tls-acme: 'true'
                  hosts: 
                    - grafana.{{metadata.labels.abhra.shambhala/url-base-path}}
                  path: /
                  pathType: Prefix
                  tls: 
                    - secretName: grafana-server-cert
                      hosts:
                        - grafana.{{metadata.labels.abhra.shambhala/url-base-path}}
            prometheus:
              ingress:
                  enabled: true
                  ingressClassName: nginx
                  annotations:
                    cert-manager.io/cluster-issuer: 'letsencrypt-{{metadata.labels.abhra.shambhala/environment-type}}'
                    kubernetes.io/tls-acme: 'true'
                  hosts: 
                    - prometheus.{{metadata.labels.abhra.shambhala/url-base-path}}
                  path: /
                  pathType: Prefix
                  tls: 
                    - secretName: prometheus-server-cert
                      hosts:
                        - prometheus.{{metadata.labels.abhra.shambhala/url-base-path}}

      destination:
        namespace: tools-monitoring
        server: https://kubernetes.default.svc
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
        syncOptions:
        - CreateNamespace=true
